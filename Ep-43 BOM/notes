In JavaScript, **BOM** stands for **Browser Object Model**. It refers to the set of objects that allow interaction with the browser 
outside the scope of the web page's content (HTML or CSS). BOM provides JavaScript with the ability to interact with the browser's
environment, such as managing browser windows, accessing the user's location, controlling the browser history, and more.

Here are some key components of the BOM:

1. **`window` object**: The global object in JavaScript that represents the browser window. It contains methods and properties 
      like `alert()`, `setTimeout()`, `localStorage`, and `document`.

2. **`navigator` object**: Provides information about the browser itself, such as the browser name, version, and platform.
       Example: `navigator.userAgent`.

3. **`location` object**: Represents the URL of the current page and allows navigation to a different URL. For example,
               `window.location.href` can be used to get or set the URL.

4. **`history` object**: Provides methods to interact with the browser's session history. For example, `window.history.back()`
            lets you go back to the previous page.

5. **`screen` object**: Provides information about the user's screen, such as its resolution and color depth.

6. **`localStorage` and `sessionStorage`**: These objects allow storing data in the browser's storage, with `localStorage` 
                 storing data persistently and `sessionStorage` storing data for the duration of the session.

In essence, BOM allows JavaScript to interact with the browser window and control things like navigation, storage,
           and browser state, providing developers with a way to create more dynamic web experiences.
